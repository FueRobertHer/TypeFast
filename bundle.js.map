{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/random-words/index.js","webpack:///./js/box.js","webpack:///./js/node.js","webpack:///./js/linkedlist.js","webpack:///./js/game.js","webpack:///./js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wordList","words","options","word","maxLength","wordUsed","rightSize","generateRandomWord","length","generateWordWithMaxLength","randInt","lessThan","Math","floor","random","exactly","min","max","wordsPerString","formatter","separator","total","results","token","relativeIndex","push","join","js_box","[object Object]","x","y","text","this","js_node","val","prev","next","linkedlist","head","tail","size","node","curr","randomWords","game","diff","score","document","getElementById","audio","input","inputField","startHeader","startBtn","highest","querySelector","highestBoard","book","initializeGame","animate","spawnRandomObject","currentScore","highScore","parseInt","localStorage","getItem","gameOver","spawnY","spawnRate","spawnRateOfDescent","lastSpawn","boxes","Map","startTime","Date","now","loop","load","listenToInput","listenToKey","fillBook","style","display","innerText","focus","play","e","keyCode","playGame","addEventListener","keyDown","userInput","target","has","remove","delete","highestScore","setItem","pause","autoFocus","time","requestAnimationFrame","clearRect","canvas","width","height","reset","hasNext","box","beginPath","fillStyle","fillText","font","closePath","shift","measureText","insert","set","getContext","startBtns","querySelectorAll","score_board","points","innerHTML","forEach","btn","newGame"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mBClFA,IAAAC,EAAA,CAEA,0EACA,yEACA,kFACA,uEACA,6DACA,oEACA,kEACA,wEACA,kFACA,yEACA,6DACA,sEACA,mFACA,0DACA,0DACA,+DACA,0EACA,sEACA,mEACA,mEACA,kEACA,gEACA,2DACA,0DACA,sEACA,yEACA,uEACA,gEACA,2DACA,0DACA,oEACA,sEACA,6DACA,6EACA,qFACA,yEACA,wEACA,oEACA,uEACA,iEACA,6EACA,iFACA,4FACA,gGACA,uFACA,oEACA,uEACA,kEACA,+DACA,wEACA,+DACA,uEACA,uEACA,8EACA,sFACA,oFACA,wEACA,4DACA,6DACA,mEACA,yDACA,8DACA,6DACA,uEACA,yEACA,0EACA,wFACA,6EACA,sFACA,yFACA,uFACA,qEACA,sEACA,iEACA,oEACA,4DACA,sEACA,kEACA,6DACA,iEACA,+DACA,sEACA,kEACA,sEACA,oEACA,oEACA,iEACA,wEACA,6DACA,0DACA,qFACA,wEACA,gEACA,yDACA,uEACA,gEACA,+DACA,gEACA,+DACA,oEACA,0DACA,+DACA,oEACA,4DACA,oFACA,yFACA,0FACA,oFACA,qDACA,8DACA,0DACA,iEACA,+DACA,6DACA,mEACA,4DACA,gEACA,8DACA,kEACA,0DACA,6DACA,mEACA,iEACA,wEACA,qEACA,mEACA,iEACA,iEACA,yEACA,uEACA,gEACA,sEACA,+DACA,+EACA,wEACA,gFACA,8DACA,2DACA,4DACA,6EACA,+DACA,uDACA,4EACA,kFACA,iEACA,+DACA,qEACA,+EACA,6DACA,2EACA,uEACA,4DACA,iEACA,yEACA,oEACA,qEACA,8EACA,mEACA,qFACA,kFACA,+EACA,yFACA,kEACA,sEACA,uEACA,+DACA,8DACA,4EACA,gFACA,gFACA,6EACA,8DACA,8DACA,wDACA,6DACA,8DACA,+DACA,gEACA,4EACA,kEACA,mEACA,yEACA,yEACA,kEACA,qEACA,gEACA,gEACA,qEACA,qEACA,8DACA,mEACA,uEACA,6DACA,kEACA,gFACA,gEACA,2EACA,iEACA,qEACA,wEACA,kEACA,mEACA,wEACA,0EACA,kFACA,gFACA,mEACA,4EACA,uEACA,2DACA,6DACA,2EACA,6DACA,uEACA,+D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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","var wordList = [\n  // Borrowed from xkcd password generator which borrowed it from wherever\n  \"ability\",\"able\",\"aboard\",\"about\",\"above\",\"accept\",\"accident\",\"according\",\n  \"account\",\"accurate\",\"acres\",\"across\",\"act\",\"action\",\"active\",\"activity\",\n  \"actual\",\"actually\",\"add\",\"addition\",\"additional\",\"adjective\",\"adult\",\"adventure\",\n  \"advice\",\"affect\",\"afraid\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\n  \"ago\",\"agree\",\"ahead\",\"aid\",\"air\",\"airplane\",\"alike\",\"alive\",\n  \"all\",\"allow\",\"almost\",\"alone\",\"along\",\"aloud\",\"alphabet\",\"already\",\n  \"also\",\"although\",\"am\",\"among\",\"amount\",\"ancient\",\"angle\",\"angry\",\n  \"animal\",\"announced\",\"another\",\"answer\",\"ants\",\"any\",\"anybody\",\"anyone\",\n  \"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"appearance\",\"apple\",\"applied\",\n  \"appropriate\",\"are\",\"area\",\"arm\",\"army\",\"around\",\"arrange\",\"arrangement\",\n  \"arrive\",\"arrow\",\"art\",\"article\",\"as\",\"aside\",\"ask\",\"asleep\",\n  \"at\",\"ate\",\"atmosphere\",\"atom\",\"atomic\",\"attached\",\"attack\",\"attempt\",\n  \"attention\",\"audience\",\"author\",\"automobile\",\"available\",\"average\",\"avoid\",\"aware\",\n  \"away\",\"baby\",\"back\",\"bad\",\"badly\",\"bag\",\"balance\",\"ball\",\n  \"balloon\",\"band\",\"bank\",\"bar\",\"bare\",\"bark\",\"barn\",\"base\",\n  \"baseball\",\"basic\",\"basis\",\"basket\",\"bat\",\"battle\",\"be\",\"bean\",\n  \"bear\",\"beat\",\"beautiful\",\"beauty\",\"became\",\"because\",\"become\",\"becoming\",\n  \"bee\",\"been\",\"before\",\"began\",\"beginning\",\"begun\",\"behavior\",\"behind\",\n  \"being\",\"believed\",\"bell\",\"belong\",\"below\",\"belt\",\"bend\",\"beneath\",\n  \"bent\",\"beside\",\"best\",\"bet\",\"better\",\"between\",\"beyond\",\"bicycle\",\n  \"bigger\",\"biggest\",\"bill\",\"birds\",\"birth\",\"birthday\",\"bit\",\"bite\",\n  \"black\",\"blank\",\"blanket\",\"blew\",\"blind\",\"block\",\"blood\",\"blow\",\n  \"blue\",\"board\",\"boat\",\"body\",\"bone\",\"book\",\"border\",\"born\",\n  \"both\",\"bottle\",\"bottom\",\"bound\",\"bow\",\"bowl\",\"box\",\"boy\",\n  \"brain\",\"branch\",\"brass\",\"brave\",\"bread\",\"break\",\"breakfast\",\"breath\",\n  \"breathe\",\"breathing\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\n  \"broad\",\"broke\",\"broken\",\"brother\",\"brought\",\"brown\",\"brush\",\"buffalo\",\n  \"build\",\"building\",\"built\",\"buried\",\"burn\",\"burst\",\"bus\",\"bush\",\n  \"business\",\"busy\",\"but\",\"butter\",\"buy\",\"by\",\"cabin\",\"cage\",\n  \"cake\",\"call\",\"calm\",\"came\",\"camera\",\"camp\",\"can\",\"canal\",\n  \"cannot\",\"cap\",\"capital\",\"captain\",\"captured\",\"car\",\"carbon\",\"card\",\n  \"care\",\"careful\",\"carefully\",\"carried\",\"carry\",\"case\",\"cast\",\"castle\",\n  \"cat\",\"catch\",\"cattle\",\"caught\",\"cause\",\"cave\",\"cell\",\"cent\",\n  \"center\",\"central\",\"century\",\"certain\",\"certainly\",\"chain\",\"chair\",\"chamber\",\n  \"chance\",\"change\",\"changing\",\"chapter\",\"character\",\"characteristic\",\"charge\",\"chart\",\n  \"check\",\"cheese\",\"chemical\",\"chest\",\"chicken\",\"chief\",\"child\",\"children\",\n  \"choice\",\"choose\",\"chose\",\"chosen\",\"church\",\"circle\",\"circus\",\"citizen\",\n  \"city\",\"class\",\"classroom\",\"claws\",\"clay\",\"clean\",\"clear\",\"clearly\",\n  \"climate\",\"climb\",\"clock\",\"close\",\"closely\",\"closer\",\"cloth\",\"clothes\",\n  \"clothing\",\"cloud\",\"club\",\"coach\",\"coal\",\"coast\",\"coat\",\"coffee\",\n  \"cold\",\"collect\",\"college\",\"colony\",\"color\",\"column\",\"combination\",\"combine\",\n  \"come\",\"comfortable\",\"coming\",\"command\",\"common\",\"community\",\"company\",\"compare\",\n  \"compass\",\"complete\",\"completely\",\"complex\",\"composed\",\"composition\",\"compound\",\"concerned\",\n  \"condition\",\"congress\",\"connected\",\"consider\",\"consist\",\"consonant\",\"constantly\",\"construction\",\n  \"contain\",\"continent\",\"continued\",\"contrast\",\"control\",\"conversation\",\"cook\",\"cookies\",\n  \"cool\",\"copper\",\"copy\",\"corn\",\"corner\",\"correct\",\"correctly\",\"cost\",\n  \"cotton\",\"could\",\"count\",\"country\",\"couple\",\"courage\",\"course\",\"court\",\n  \"cover\",\"cow\",\"cowboy\",\"crack\",\"cream\",\"create\",\"creature\",\"crew\",\n  \"crop\",\"cross\",\"crowd\",\"cry\",\"cup\",\"curious\",\"current\",\"curve\",\n  \"customs\",\"cut\",\"cutting\",\"daily\",\"damage\",\"dance\",\"danger\",\"dangerous\",\n  \"dark\",\"darkness\",\"date\",\"daughter\",\"dawn\",\"day\",\"dead\",\"deal\",\n  \"dear\",\"death\",\"decide\",\"declared\",\"deep\",\"deeply\",\"deer\",\"definition\",\n  \"degree\",\"depend\",\"depth\",\"describe\",\"desert\",\"design\",\"desk\",\"detail\",\n  \"determine\",\"develop\",\"development\",\"diagram\",\"diameter\",\"did\",\"die\",\"differ\",\n  \"difference\",\"different\",\"difficult\",\"difficulty\",\"dig\",\"dinner\",\"direct\",\"direction\",\n  \"directly\",\"dirt\",\"dirty\",\"disappear\",\"discover\",\"discovery\",\"discuss\",\"discussion\",\n  \"disease\",\"dish\",\"distance\",\"distant\",\"divide\",\"division\",\"do\",\"doctor\",\n  \"does\",\"dog\",\"doing\",\"doll\",\"dollar\",\"done\",\"donkey\",\"door\",\n  \"dot\",\"double\",\"doubt\",\"down\",\"dozen\",\"draw\",\"drawn\",\"dream\",\n  \"dress\",\"drew\",\"dried\",\"drink\",\"drive\",\"driven\",\"driver\",\"driving\",\n  \"drop\",\"dropped\",\"drove\",\"dry\",\"duck\",\"due\",\"dug\",\"dull\",\n  \"during\",\"dust\",\"duty\",\"each\",\"eager\",\"ear\",\"earlier\",\"early\",\n  \"earn\",\"earth\",\"easier\",\"easily\",\"east\",\"easy\",\"eat\",\"eaten\",\n  \"edge\",\"education\",\"effect\",\"effort\",\"egg\",\"eight\",\"either\",\"electric\",\n  \"electricity\",\"element\",\"elephant\",\"eleven\",\"else\",\"empty\",\"end\",\"enemy\",\n  \"energy\",\"engine\",\"engineer\",\"enjoy\",\"enough\",\"enter\",\"entire\",\"entirely\",\n  \"environment\",\"equal\",\"equally\",\"equator\",\"equipment\",\"escape\",\"especially\",\"essential\",\n  \"establish\",\"even\",\"evening\",\"event\",\"eventually\",\"ever\",\"every\",\"everybody\",\n  \"everyone\",\"everything\",\"everywhere\",\"evidence\",\"exact\",\"exactly\",\"examine\",\"example\",\n  \"excellent\",\"except\",\"exchange\",\"excited\",\"excitement\",\"exciting\",\"exclaimed\",\"exercise\",\n  \"exist\",\"expect\",\"experience\",\"experiment\",\"explain\",\"explanation\",\"explore\",\"express\",\n  \"expression\",\"extra\",\"eye\",\"face\",\"facing\",\"fact\",\"factor\",\"factory\",\n  \"failed\",\"fair\",\"fairly\",\"fall\",\"fallen\",\"familiar\",\"family\",\"famous\",\n  \"far\",\"farm\",\"farmer\",\"farther\",\"fast\",\"fastened\",\"faster\",\"fat\",\n  \"father\",\"favorite\",\"fear\",\"feathers\",\"feature\",\"fed\",\"feed\",\"feel\",\n  \"feet\",\"fell\",\"fellow\",\"felt\",\"fence\",\"few\",\"fewer\",\"field\",\n  \"fierce\",\"fifteen\",\"fifth\",\"fifty\",\"fight\",\"fighting\",\"figure\",\"fill\",\n  \"film\",\"final\",\"finally\",\"find\",\"fine\",\"finest\",\"finger\",\"finish\",\n  \"fire\",\"fireplace\",\"firm\",\"first\",\"fish\",\"five\",\"fix\",\"flag\",\n  \"flame\",\"flat\",\"flew\",\"flies\",\"flight\",\"floating\",\"floor\",\"flow\",\n  \"flower\",\"fly\",\"fog\",\"folks\",\"follow\",\"food\",\"foot\",\"football\",\n  \"for\",\"force\",\"foreign\",\"forest\",\"forget\",\"forgot\",\"forgotten\",\"form\",\n  \"former\",\"fort\",\"forth\",\"forty\",\"forward\",\"fought\",\"found\",\"four\",\n  \"fourth\",\"fox\",\"frame\",\"free\",\"freedom\",\"frequently\",\"fresh\",\"friend\",\n  \"friendly\",\"frighten\",\"frog\",\"from\",\"front\",\"frozen\",\"fruit\",\"fuel\",\n  \"full\",\"fully\",\"fun\",\"function\",\"funny\",\"fur\",\"furniture\",\"further\",\n  \"future\",\"gain\",\"game\",\"garage\",\"garden\",\"gas\",\"gasoline\",\"gate\",\n  \"gather\",\"gave\",\"general\",\"generally\",\"gentle\",\"gently\",\"get\",\"getting\",\n  \"giant\",\"gift\",\"girl\",\"give\",\"given\",\"giving\",\"glad\",\"glass\",\n  \"globe\",\"go\",\"goes\",\"gold\",\"golden\",\"gone\",\"good\",\"goose\",\n  \"got\",\"government\",\"grabbed\",\"grade\",\"gradually\",\"grain\",\"grandfather\",\"grandmother\",\n  \"graph\",\"grass\",\"gravity\",\"gray\",\"great\",\"greater\",\"greatest\",\"greatly\",\n  \"green\",\"grew\",\"ground\",\"group\",\"grow\",\"grown\",\"growth\",\"guard\",\n  \"guess\",\"guide\",\"gulf\",\"gun\",\"habit\",\"had\",\"hair\",\"half\",\n  \"halfway\",\"hall\",\"hand\",\"handle\",\"handsome\",\"hang\",\"happen\",\"happened\",\n  \"happily\",\"happy\",\"harbor\",\"hard\",\"harder\",\"hardly\",\"has\",\"hat\",\n  \"have\",\"having\",\"hay\",\"he\",\"headed\",\"heading\",\"health\",\"heard\",\n  \"hearing\",\"heart\",\"heat\",\"heavy\",\"height\",\"held\",\"hello\",\"help\",\n  \"helpful\",\"her\",\"herd\",\"here\",\"herself\",\"hidden\",\"hide\",\"high\",\n  \"higher\",\"highest\",\"highway\",\"hill\",\"him\",\"himself\",\"his\",\"history\",\n  \"hit\",\"hold\",\"hole\",\"hollow\",\"home\",\"honor\",\"hope\",\"horn\",\n  \"horse\",\"hospital\",\"hot\",\"hour\",\"house\",\"how\",\"however\",\"huge\",\n  \"human\",\"hundred\",\"hung\",\"hungry\",\"hunt\",\"hunter\",\"hurried\",\"hurry\",\n  \"hurt\",\"husband\",\"ice\",\"idea\",\"identity\",\"if\",\"ill\",\"image\",\n  \"imagine\",\"immediately\",\"importance\",\"important\",\"impossible\",\"improve\",\"in\",\"inch\",\n  \"include\",\"including\",\"income\",\"increase\",\"indeed\",\"independent\",\"indicate\",\"individual\",\n  \"industrial\",\"industry\",\"influence\",\"information\",\"inside\",\"instance\",\"instant\",\"instead\",\n  \"instrument\",\"interest\",\"interior\",\"into\",\"introduced\",\"invented\",\"involved\",\"iron\",\n  \"is\",\"island\",\"it\",\"its\",\"itself\",\"jack\",\"jar\",\"jet\",\n  \"job\",\"join\",\"joined\",\"journey\",\"joy\",\"judge\",\"jump\",\"jungle\",\n  \"just\",\"keep\",\"kept\",\"key\",\"kids\",\"kill\",\"kind\",\"kitchen\",\n  \"knew\",\"knife\",\"know\",\"knowledge\",\"known\",\"label\",\"labor\",\"lack\",\n  \"lady\",\"laid\",\"lake\",\"lamp\",\"land\",\"language\",\"large\",\"larger\",\n  \"largest\",\"last\",\"late\",\"later\",\"laugh\",\"law\",\"lay\",\"layers\",\n  \"lead\",\"leader\",\"leaf\",\"learn\",\"least\",\"leather\",\"leave\",\"leaving\",\n  \"led\",\"left\",\"leg\",\"length\",\"lesson\",\"let\",\"letter\",\"level\",\n  \"library\",\"lie\",\"life\",\"lift\",\"light\",\"like\",\"likely\",\"limited\",\n  \"line\",\"lion\",\"lips\",\"liquid\",\"list\",\"listen\",\"little\",\"live\",\n  \"living\",\"load\",\"local\",\"locate\",\"location\",\"log\",\"lonely\",\"long\",\n  \"longer\",\"look\",\"loose\",\"lose\",\"loss\",\"lost\",\"lot\",\"loud\",\n  \"love\",\"lovely\",\"low\",\"lower\",\"luck\",\"lucky\",\"lunch\",\"lungs\",\n  \"lying\",\"machine\",\"machinery\",\"mad\",\"made\",\"magic\",\"magnet\",\"mail\",\n  \"main\",\"mainly\",\"major\",\"make\",\"making\",\"man\",\"managed\",\"manner\",\n  \"manufacturing\",\"many\",\"map\",\"mark\",\"market\",\"married\",\"mass\",\"massage\",\n  \"master\",\"material\",\"mathematics\",\"matter\",\"may\",\"maybe\",\"me\",\"meal\",\n  \"mean\",\"means\",\"meant\",\"measure\",\"meat\",\"medicine\",\"meet\",\"melted\",\n  \"member\",\"memory\",\"men\",\"mental\",\"merely\",\"met\",\"metal\",\"method\",\n  \"mice\",\"middle\",\"might\",\"mighty\",\"mile\",\"military\",\"milk\",\"mill\",\n  \"mind\",\"mine\",\"minerals\",\"minute\",\"mirror\",\"missing\",\"mission\",\"mistake\",\n  \"mix\",\"mixture\",\"model\",\"modern\",\"molecular\",\"moment\",\"money\",\"monkey\",\n  \"month\",\"mood\",\"moon\",\"more\",\"morning\",\"most\",\"mostly\",\"mother\",\n  \"motion\",\"motor\",\"mountain\",\"mouse\",\"mouth\",\"move\",\"movement\",\"movie\",\n  \"moving\",\"mud\",\"muscle\",\"music\",\"musical\",\"must\",\"my\",\"myself\",\n  \"mysterious\",\"nails\",\"name\",\"nation\",\"national\",\"native\",\"natural\",\"naturally\",\n  \"nature\",\"near\",\"nearby\",\"nearer\",\"nearest\",\"nearly\",\"necessary\",\"neck\",\n  \"needed\",\"needle\",\"needs\",\"negative\",\"neighbor\",\"neighborhood\",\"nervous\",\"nest\",\n  \"never\",\"new\",\"news\",\"newspaper\",\"next\",\"nice\",\"night\",\"nine\",\n  \"no\",\"nobody\",\"nodded\",\"noise\",\"none\",\"noon\",\"nor\",\"north\",\n  \"nose\",\"not\",\"note\",\"noted\",\"nothing\",\"notice\",\"noun\",\"now\",\n  \"number\",\"numeral\",\"nuts\",\"object\",\"observe\",\"obtain\",\"occasionally\",\"occur\",\n  \"ocean\",\"of\",\"off\",\"offer\",\"office\",\"officer\",\"official\",\"oil\",\n  \"old\",\"older\",\"oldest\",\"on\",\"once\",\"one\",\"only\",\"onto\",\n  \"open\",\"operation\",\"opinion\",\"opportunity\",\"opposite\",\"or\",\"orange\",\"orbit\",\n  \"order\",\"ordinary\",\"organization\",\"organized\",\"origin\",\"original\",\"other\",\"ought\",\n  \"our\",\"ourselves\",\"out\",\"outer\",\"outline\",\"outside\",\"over\",\"own\",\n  \"owner\",\"oxygen\",\"pack\",\"package\",\"page\",\"paid\",\"pain\",\"paint\",\n  \"pair\",\"palace\",\"pale\",\"pan\",\"paper\",\"paragraph\",\"parallel\",\"parent\",\n  \"park\",\"part\",\"particles\",\"particular\",\"particularly\",\"partly\",\"parts\",\"party\",\n  \"pass\",\"passage\",\"past\",\"path\",\"pattern\",\"pay\",\"peace\",\"pen\",\n  \"pencil\",\"people\",\"per\",\"percent\",\"perfect\",\"perfectly\",\"perhaps\",\"period\",\n  \"person\",\"personal\",\"pet\",\"phrase\",\"physical\",\"piano\",\"pick\",\"picture\",\n  \"pictured\",\"pie\",\"piece\",\"pig\",\"pile\",\"pilot\",\"pine\",\"pink\",\n  \"pipe\",\"pitch\",\"place\",\"plain\",\"plan\",\"plane\",\"planet\",\"planned\",\n  \"planning\",\"plant\",\"plastic\",\"plate\",\"plates\",\"play\",\"pleasant\",\"please\",\n  \"pleasure\",\"plenty\",\"plural\",\"plus\",\"pocket\",\"poem\",\"poet\",\"poetry\",\n  \"point\",\"pole\",\"police\",\"policeman\",\"political\",\"pond\",\"pony\",\"pool\",\n  \"poor\",\"popular\",\"population\",\"porch\",\"port\",\"position\",\"positive\",\"possible\",\n  \"possibly\",\"post\",\"pot\",\"potatoes\",\"pound\",\"pour\",\"powder\",\"power\",\n  \"powerful\",\"practical\",\"practice\",\"prepare\",\"present\",\"president\",\"press\",\"pressure\",\n  \"pretty\",\"prevent\",\"previous\",\"price\",\"pride\",\"primitive\",\"principal\",\"principle\",\n  \"printed\",\"private\",\"prize\",\"probably\",\"problem\",\"process\",\"produce\",\"product\",\n  \"production\",\"program\",\"progress\",\"promised\",\"proper\",\"properly\",\"property\",\"protection\",\n  \"proud\",\"prove\",\"provide\",\"public\",\"pull\",\"pupil\",\"pure\",\"purple\",\n  \"purpose\",\"push\",\"put\",\"putting\",\"quarter\",\"queen\",\"question\",\"quick\",\n  \"quickly\",\"quiet\",\"quietly\",\"quite\",\"rabbit\",\"race\",\"radio\",\"railroad\",\n  \"rain\",\"raise\",\"ran\",\"ranch\",\"range\",\"rapidly\",\"rate\",\"rather\",\n  \"raw\",\"rays\",\"reach\",\"read\",\"reader\",\"ready\",\"real\",\"realize\",\n  \"rear\",\"reason\",\"recall\",\"receive\",\"recent\",\"recently\",\"recognize\",\"record\",\n  \"red\",\"refer\",\"refused\",\"region\",\"regular\",\"related\",\"relationship\",\"religious\",\n  \"remain\",\"remarkable\",\"remember\",\"remove\",\"repeat\",\"replace\",\"replied\",\"report\",\n  \"represent\",\"require\",\"research\",\"respect\",\"rest\",\"result\",\"return\",\"review\",\n  \"rhyme\",\"rhythm\",\"rice\",\"rich\",\"ride\",\"riding\",\"right\",\"ring\",\n  \"rise\",\"rising\",\"river\",\"road\",\"roar\",\"rock\",\"rocket\",\"rocky\",\n  \"rod\",\"roll\",\"roof\",\"room\",\"root\",\"rope\",\"rose\",\"rough\",\n  \"round\",\"route\",\"row\",\"rubbed\",\"rubber\",\"rule\",\"ruler\",\"run\",\n  \"running\",\"rush\",\"sad\",\"saddle\",\"safe\",\"safety\",\"said\",\"sail\",\n  \"sale\",\"salmon\",\"salt\",\"same\",\"sand\",\"sang\",\"sat\",\"satellites\",\n  \"satisfied\",\"save\",\"saved\",\"saw\",\"say\",\"scale\",\"scared\",\"scene\",\n  \"school\",\"science\",\"scientific\",\"scientist\",\"score\",\"screen\",\"sea\",\"search\",\n  \"season\",\"seat\",\"second\",\"secret\",\"section\",\"see\",\"seed\",\"seeing\",\n  \"seems\",\"seen\",\"seldom\",\"select\",\"selection\",\"sell\",\"send\",\"sense\",\n  \"sent\",\"sentence\",\"separate\",\"series\",\"serious\",\"serve\",\"service\",\"sets\",\n  \"setting\",\"settle\",\"settlers\",\"seven\",\"several\",\"shade\",\"shadow\",\"shake\",\n  \"shaking\",\"shall\",\"shallow\",\"shape\",\"share\",\"sharp\",\"she\",\"sheep\",\n  \"sheet\",\"shelf\",\"shells\",\"shelter\",\"shine\",\"shinning\",\"ship\",\"shirt\",\n  \"shoe\",\"shoot\",\"shop\",\"shore\",\"short\",\"shorter\",\"shot\",\"should\",\n  \"shoulder\",\"shout\",\"show\",\"shown\",\"shut\",\"sick\",\"sides\",\"sight\",\n  \"sign\",\"signal\",\"silence\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\n  \"simple\",\"simplest\",\"simply\",\"since\",\"sing\",\"single\",\"sink\",\"sister\",\n  \"sit\",\"sitting\",\"situation\",\"six\",\"size\",\"skill\",\"skin\",\"sky\",\n  \"slabs\",\"slave\",\"sleep\",\"slept\",\"slide\",\"slight\",\"slightly\",\"slip\",\n  \"slipped\",\"slope\",\"slow\",\"slowly\",\"small\",\"smaller\",\"smallest\",\"smell\",\n  \"smile\",\"smoke\",\"smooth\",\"snake\",\"snow\",\"so\",\"soap\",\"social\",\n  \"society\",\"soft\",\"softly\",\"soil\",\"solar\",\"sold\",\"soldier\",\"solid\",\n  \"solution\",\"solve\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\n  \"somewhere\",\"son\",\"song\",\"soon\",\"sort\",\"sound\",\"source\",\"south\",\n  \"southern\",\"space\",\"speak\",\"special\",\"species\",\"specific\",\"speech\",\"speed\",\n  \"spell\",\"spend\",\"spent\",\"spider\",\"spin\",\"spirit\",\"spite\",\"split\",\n  \"spoken\",\"sport\",\"spread\",\"spring\",\"square\",\"stage\",\"stairs\",\"stand\",\n  \"standard\",\"star\",\"stared\",\"start\",\"state\",\"statement\",\"station\",\"stay\",\n  \"steady\",\"steam\",\"steel\",\"steep\",\"stems\",\"step\",\"stepped\",\"stick\",\n  \"stiff\",\"still\",\"stock\",\"stomach\",\"stone\",\"stood\",\"stop\",\"stopped\",\n  \"store\",\"storm\",\"story\",\"stove\",\"straight\",\"strange\",\"stranger\",\"straw\",\n  \"stream\",\"street\",\"strength\",\"stretch\",\"strike\",\"string\",\"strip\",\"strong\",\n  \"stronger\",\"struck\",\"structure\",\"struggle\",\"stuck\",\"student\",\"studied\",\"studying\",\n  \"subject\",\"substance\",\"success\",\"successful\",\"such\",\"sudden\",\"suddenly\",\"sugar\",\n  \"suggest\",\"suit\",\"sum\",\"summer\",\"sun\",\"sunlight\",\"supper\",\"supply\",\n  \"support\",\"suppose\",\"sure\",\"surface\",\"surprise\",\"surrounded\",\"swam\",\"sweet\",\n  \"swept\",\"swim\",\"swimming\",\"swing\",\"swung\",\"syllable\",\"symbol\",\"system\",\n  \"table\",\"tail\",\"take\",\"taken\",\"tales\",\"talk\",\"tall\",\"tank\",\n  \"tape\",\"task\",\"taste\",\"taught\",\"tax\",\"tea\",\"teach\",\"teacher\",\n  \"team\",\"tears\",\"teeth\",\"telephone\",\"television\",\"tell\",\"temperature\",\"ten\",\n  \"tent\",\"term\",\"terrible\",\"test\",\"than\",\"thank\",\"that\",\"thee\",\n  \"them\",\"themselves\",\"then\",\"theory\",\"there\",\"therefore\",\"these\",\"they\",\n  \"thick\",\"thin\",\"thing\",\"think\",\"third\",\"thirty\",\"this\",\"those\",\n  \"thou\",\"though\",\"thought\",\"thousand\",\"thread\",\"three\",\"threw\",\"throat\",\n  \"through\",\"throughout\",\"throw\",\"thrown\",\"thumb\",\"thus\",\"thy\",\"tide\",\n  \"tie\",\"tight\",\"tightly\",\"till\",\"time\",\"tin\",\"tiny\",\"tip\",\n  \"tired\",\"title\",\"to\",\"tobacco\",\"today\",\"together\",\"told\",\"tomorrow\",\n  \"tone\",\"tongue\",\"tonight\",\"too\",\"took\",\"tool\",\"top\",\"topic\",\n  \"torn\",\"total\",\"touch\",\"toward\",\"tower\",\"town\",\"toy\",\"trace\",\n  \"track\",\"trade\",\"traffic\",\"trail\",\"train\",\"transportation\",\"trap\",\"travel\",\n  \"treated\",\"tree\",\"triangle\",\"tribe\",\"trick\",\"tried\",\"trip\",\"troops\",\n  \"tropical\",\"trouble\",\"truck\",\"trunk\",\"truth\",\"try\",\"tube\",\"tune\",\n  \"turn\",\"twelve\",\"twenty\",\"twice\",\"two\",\"type\",\"typical\",\"uncle\",\n  \"under\",\"underline\",\"understanding\",\"unhappy\",\"union\",\"unit\",\"universe\",\"unknown\",\n  \"unless\",\"until\",\"unusual\",\"up\",\"upon\",\"upper\",\"upward\",\"us\",\n  \"use\",\"useful\",\"using\",\"usual\",\"usually\",\"valley\",\"valuable\",\"value\",\n  \"vapor\",\"variety\",\"various\",\"vast\",\"vegetable\",\"verb\",\"vertical\",\"very\",\n  \"vessels\",\"victory\",\"view\",\"village\",\"visit\",\"visitor\",\"voice\",\"volume\",\n  \"vote\",\"vowel\",\"voyage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"want\",\n  \"war\",\"warm\",\"warn\",\"was\",\"wash\",\"waste\",\"watch\",\"water\",\n  \"wave\",\"way\",\"we\",\"weak\",\"wealth\",\"wear\",\"weather\",\"week\",\n  \"weigh\",\"weight\",\"welcome\",\"well\",\"went\",\"were\",\"west\",\"western\",\n  \"wet\",\"whale\",\"what\",\"whatever\",\"wheat\",\"wheel\",\"when\",\"whenever\",\n  \"where\",\"wherever\",\"whether\",\"which\",\"while\",\"whispered\",\"whistle\",\"white\",\n  \"who\",\"whole\",\"whom\",\"whose\",\"why\",\"wide\",\"widely\",\"wife\",\n  \"wild\",\"will\",\"willing\",\"win\",\"wind\",\"window\",\"wing\",\"winter\",\n  \"wire\",\"wise\",\"wish\",\"with\",\"within\",\"without\",\"wolf\",\"women\",\n  \"won\",\"wonder\",\"wonderful\",\"wood\",\"wooden\",\"wool\",\"word\",\"wore\",\n  \"work\",\"worker\",\"world\",\"worried\",\"worry\",\"worse\",\"worth\",\"would\",\n  \"wrapped\",\"write\",\"writer\",\"writing\",\"written\",\"wrong\",\"wrote\",\"yard\",\n  \"year\",\"yellow\",\"yes\",\"yesterday\",\"yet\",\"you\",\"young\",\"younger\",\n  \"your\",\"yourself\",\"youth\",\"zero\",\"zebra\",\"zipper\",\"zoo\",\"zulu\"\n];\n\nfunction words(options) {\n\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    let rightSize = false;\n    let wordUsed;\n    while (!rightSize) {  \n      wordUsed = generateRandomWord();\n      if(wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n\n    }\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  }\n\n  // No arguments = generate one word\n  if (typeof(options) === 'undefined') {\n    return word();\n  }\n\n  // Just a number = return that many words\n  if (typeof(options) === 'number') {\n    options = { exactly: options };\n  }\n\n  // options supported: exactly, min, max, join\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  }\n  \n  // not a number = one word par string\n  if (typeof(options.wordsPerString) !== 'number') {\n    options.wordsPerString = 1;\n  }\n\n  //not a function = returns the raw word\n  if (typeof(options.formatter) !== 'function') {\n    options.formatter = (word) => word;\n  }\n\n  //not a string = separator is a space\n  if (typeof(options.separator) !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; (i < total * options.wordsPerString); i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    }\n    else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n    relativeIndex++;\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = ''; \n      relativeIndex = 0;\n    }\n   \n  }\n  if (options.join) {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words;\n// Export the word list as it is often useful\nwords.wordList = wordList;","class Box {\n  constructor(c, x, y, text) {\n    this.c = c;\n    this.x = x;\n    this.y = y;\n    this.text = text;\n  }\n}\n\nexport default Box;","class Node {\n  constructor(val) {\n    this.val = val;\n    this.prev = null;\n    this.next = null;\n  }\n}\n\nexport default Node;","import Node from './node';\n\nclass LinkedList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n  }\n\n  insert(node) {\n    if (this.size === 0) {\n      this.head = node;\n      this.tail = node;\n      this.curr = this.head;\n    } else {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    }\n\n    this.size++;\n  }\n\n  remove(node) {\n    if (this.size === 0) {\n      this.head = null;\n      this.tail = null;\n    } else if (node === this.head) {\n      this.head = node.next;\n    } else if (node === this.tail) {\n      this.tail = node.prev;\n    } else {\n      node.prev.next = node.next;\n      node.next.prev = node.prev;\n    }\n\n    this.size--;\n  }\n\n  reset() {\n    this.curr = this.head;\n  }\n\n  hasNext() {\n    return this.curr !== null;\n  }\n\n  next() {\n    let node = this.curr;\n    this.curr = node.next;\n    return node;\n  }\n}\n\nexport default LinkedList;","import Box from \"./box\";\nimport LinkedList from './linkedlist';\nimport Node from './node';\n\nconst randomWords = require('random-words');\n\nclass Game {\n  constructor(c, diff) {\n    // initialize board, boxes, speed, music\n    this.c = c;\n    this.diff = diff\n    this.score = document.getElementById(\"score\");\n    this.audio = document.getElementById(\"audio\");\n    this.input = document.getElementById(\"user-input\");\n    this.inputField = document.getElementById(\"text\");\n    this.startHeader = document.getElementById(\"start-header\");\n    this.startBtn = document.getElementById(\"start-btn\");\n    this.highest = document.querySelector(\"score-board\");\n    this.highestBoard = document.getElementById(\"score-broad\");\n    this.book = []\n\n    this.initializeGame();\n    this.animate = this.animate.bind(this);\n    this.spawnRandomObject = this.spawnRandomObject.bind(this);\n  } \n\n  initializeGame() {\n    this.currentScore = 0;\n    this.highScore = parseInt(localStorage.getItem(\"score\")) || 0;\n    this.gameOver = true;\n    this.spawnY = 0;\n    this.spawnRate = 2000; \n    this.spawnRateOfDescent = .8;\n    this.lastSpawn = -1;\n    this.boxes = new LinkedList();\n    this.words = new Map();\n    this.startTime = Date.now();\n    this.audio.loop = true;\n    this.audio.load();\n    this.listenToInput();\n    this.listenToKey();\n    this.fillBook()\n  }\n  \n  // function to start the gamewet\n  playGame() {    \n    this.startHeader.style.display = \"none\";\n    this.score.style.display = \"block\";\n    this.score.innerText = \"Score: 0\";\n    this.input.style.display = \"flex\";   \n    this.inputField.value = \"\";   \n    this.inputField.focus();                    \n    this.audio.play();\n    this.gameOver = false;\n    this.animate();\n  }\n    \n  keyDown(e) {\n    if (e.key === \"Enter\") this.inputField.value = \"\";\n    if (e.keyCode === 27 && !this.gameOver) this.inputField.value = \"\";\n    if (e.keyCode === 13 && this.gameOver) this.playGame();\n  }\n\n  listenToKey() {\n    document.addEventListener(\"keydown\", (e) => this.keyDown(e));\n  }\n\n  listenToInput() {\n    this.input.addEventListener(\"input\", e => {\n      const userInput = e.target.value;\n      if (this.words.has(userInput)) {\n        let node = this.words.get(userInput);\n        let box = node.val;\n\n        this.boxes.remove(node);\n        this.words.delete(userInput);\n\n        e.target.value = \"\";\n        this.currentScore += Math.floor(userInput.length / 2);\n        this.score.innerText = `Score: ${this.currentScore}`;\n      }\n    })\n  }\n\n  fillBook() {\n    if (this.book.length < 20) this.book.push(randomWords())\n  }\n\n  autoFocus() {\n    this.inputField.focus()\n  }\n  \n  animate() {\n    if (!this.gameOver) {\n      // console.log(this.boxes);\n      // console.log(this.words);\n\n      this.autoFocus()\n      this.fillBook()\n      \n      const time = Date.now();\n      if (this.currentScore > this.highScore) this.highestBoard.innerText = this.currentScore;\n      \n      if (time - this.startTime > 60000) {\n        this.spawnRateOfDescent += 0.5;\n        if (this.spawnRate <= 600) {\n          this.spawnRate -= 100;\n        } else {\n          this.spawnRate -= 600;\n        } \n        \n        this.startTime = time;\n      }\n      \n      if (time > (this.lastSpawn + this.spawnRate)) {\n        this.lastSpawn = time;\n        this.spawnRandomObject();\n      }\n      \n      requestAnimationFrame(this.animate);\n      \n      this.c.clearRect(0, 0, this.c.canvas.width, this.c.canvas.height);\n    \n      if (this.boxes.size === 0) return;\n\n      this.boxes.reset();\n      while (this.boxes.hasNext()) {\n        let box = this.boxes.next().val;\n        box.y += this.spawnRateOfDescent;\n        this.c.beginPath();\n        this.c.fillStyle = \"#B6FF00\";\n        this.c.fillText(box.text, box.x, box.y);\n        this.c.font = \"30px Iceland\";\n        this.c.closePath();\n      }\n      \n      if (this.boxes.head.val.y >= this.c.canvas.height) this.gameOver = true;\n    } else {\n        this.startHeader.style.display = \"flex\";\n        // this.startBtn.innerHTML = \"<span>Restart Game</span>\";\n\n        let highestScore = localStorage.getItem(\"score\");\n        highestScore = Math.max(highestScore, this.currentScore);\n        localStorage.setItem(\"score\", highestScore);\n\n        this.score.innerText = \"\";\n        this.audio.pause();\n        this.initializeGame();\n      }\n  }\n\n  spawnRandomObject() {\n    let word = this.book.shift();\n    switch (this.diff) {\n      case \"Easy\":\n        while (word.length > 5) word = this.book.shift()\n        break;\n      case \"Medium\":\n        while (word.length > 7 || word.length < 4) word = this.book.shift()\n        break;\n      case \"Hard\":\n        while (word.length < 6) word = this.book.shift()\n        break;\n    }\n\n    let x = Math.random() * 900;\n\n    // console.log(word);\n    // console.log(`x:${x}, len: ${this.c.measureText(word).width}`); \n    // console.log(`total width: ${x + this.c.measureText(word).width}`);\n    while (x + this.c.measureText(word).width > this.c.canvas.width + 20) {\n      // console.log(\"out of bound\");\n      x -= 100;\n    }\n\n    // console.log(`x:${x}, y:${this.spawnY}`)\n    let box = new Box(this.c, x, this.spawnY, word);\n    let node = new Node(box);\n    this.boxes.insert(node);\n    this.words.set(word, node);\n  }\n\n}\n\nexport default Game;","import Game from \"./game\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const c = canvas.getContext('2d');\n\n  const startBtns = document.querySelectorAll(\"#start-btn\");\n  const score = document.getElementById(\"score\");\n  const score_board = document.getElementById(\"score-broad\");\n  const points = localStorage.getItem(\"score\") || 0;\n\n  // const game = new Game(c);\n  const newGame = diff => {\n    return new Game(c, diff)\n  }\n\n  score_board.innerHTML = `<span>Highest: ${points} </span>`;\n  score.style.display = \"none\";\n\n  startBtns.forEach(btn => {\n    btn.addEventListener(\"click\", () => {\n      newGame(btn.innerText).playGame()\n    })\n  })\n\n  // const config = {\n  //   childList: true\n  // };\n\n  // const callback = (mutationsList, observer) => {\n  //   for (const mutation of mutationsList) {\n  //     if (mutation.type === \"childList\") {\n  //       const target = mutation.target;\n    \n  //       // Animation here\n  //       target.classList.add('glow');\n  //       setTimeout(function () {\n  //         target.classList.remove('glow')\n  //       }, 500);\n  //     }\n  //   }\n  // };\n\n  // const observer = new MutationObserver(callback);\n  // observer.observe(score, config);\n});"],"sourceRoot":""}